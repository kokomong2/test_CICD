# github repository Actions 페이지에 나타낼 이름
name: CI/CD

# event trigger
on:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:

    ## jdk setting
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    ## gradle caching
    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    ## create application-dev.properties
    - name: make application-dev.properties
      if: contains(github.ref, 'develop') # branch가 develop일 때
      run: |
      	# spring의 resources 경로로 이동
        cd ./src/main/resources 
        
        # application-dev.properties 파일 생성
        touch ./application-dev.properties 
        
        # GitHub-Actions에서 설정한 값을 application-dev.properties 파일에 쓰기
        echo "${{ secrets.PROPERTIES_DEV }}" > ./application-dev.properties 
      shell: bash

    ## create application-prod.properties
    - name: make application-prod.properties
      if: contains(github.ref, 'main') # branch가 main 일 때, 나머지는 위와 동일
      run: |
          cd ./src/main/resources
          touch ./application-prod.properties
          echo "${{ secrets.PROPERTIES_PROD }}" > ./application-prod.properties
      shell: bash
